function checkCashRegister(price, cash, cid) {
  let fixedPrice = fixDoubles(price);
  let fixedCash = fixDoubles(cash);
  let difference = fixedCash-fixedPrice;
  let register = createRegister(cid);
  //console.log(register);
  var change;
  let [bills, exhausted] = makeChange(difference,register);

  if(bills === false){
    change={status: "INSUFFICIENT_FUNDS", change: []};
  } else if(exhausted){
    change = {status: "CLOSED", change:cid};
  } else {
    change = {status:"OPEN", change:fixBills(bills)};
  }
  console.log(change);
  console.log(exhausted);
  // Here is your change, ma'am.
  return change;
}

function makeChange(difference,tenderCount,bills=[]){
  //console.log(tenderCount)
  //console.log(difference + "" + bills)
  //change has been made
  if(difference===0){
    let exhausted = (tenderCount.length===0||tenderCount.every((n)=>{return 0===n[1]}));
    return [bills,exhausted];
    }
  //ran out of bills
  if(tenderCount.length===0){return [false,true]}
  let largest = tenderCount[0];
  //skip over entries with zero
  //skip over entries that are too large
  function descendNext(){
    let [,...newTenderCount] = tenderCount;
    return makeChange(difference, newTenderCount, bills);
  }

  if (largest[1] === 0 || difference<largest[0]){
    //console.log("skipping");
    return descendNext();
  } else {
    //descend with one less bill
    largest[1]--;
    //console.log("what");
    let answer = makeChange(difference-largest[0], tenderCount,[largest[0],...bills])
    //console.log("what");
    //restore the bill
    largest[1]++;

    if(answer !== false){
      return answer;
    } else {
      return descendNext();
    }
  }
}
function fixDoubles(num){
  return Math.round(num*100);
}
function unfixDoubles(num){
  return num/100;
}

// Example cash-in-drawer array:
// [["PENNY", 1.01],
// ["NICKEL", 2.05],
// ["DIME", 3.1],
// ["QUARTER", 4.25],
// ["ONE", 90],
// ["FIVE", 55],
// ["TEN", 20],
// ["TWENTY", 60],
// ["ONE HUNDRED", 100]]

//why is the cash register stored like this? doubles 


var names = [
  ["PENNY", 1],
  ["NICKEL", 5],
  ["DIME", 10],
  ["QUARTER", 25],
  ["ONE", 100],
  ["FIVE", 500],
  ["TEN", 1000],
  ["TWENTY",2000],
  ["ONE HUNDRED",10000]];
var converter = {}
for (let name of names){
    converter[name[0]] = name[1];
    converter[name[1]] = name[0];
}

function fixBills(bills){
  //console.log(bills);
  let count = {};
  for (let name of names){
    count[name[1]] = 0;
  }
  for (let bill of bills){
    count[bill]++;
  }
  let result = [];
  for (let name of names){
    let total = count[name[1]];
    if (0 !== total){
      result.unshift([name[0],unfixDoubles(total*name[1])]);
    }
  }
  return result;
}

function createRegister(array){
  let tenderCount = []
  
  for(let bill of array){
    const [name, amount] = bill;
    let realValue = converter[name];
    tenderCount.push([realValue,fixDoubles(amount)/realValue]);
  }
  tenderCount.sort((a,b)=>b[0]-a[0]);
  return tenderCount;
}

checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]);

//algorithm -> pick the largest coins and subtract. 
//might have to backtrack if quarters are used.
//30c,[1 quarter, 3 dimes,]

